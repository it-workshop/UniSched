cmake_minimum_required (VERSION 2.8.3)

if (WITH_DUMMYUI)
    if(NOT WITH_TESTS_CORE)
        message("опция тестирования функционала ядра системы отключена, часть функционала не будет использована в DummyUI")
    endif(NOT WITH_TESTS_CORE)
    add_library (dummyui SHARED dummy.cpp)
endif (WITH_DUMMYUI)

if (WITH_CLI)
    find_package (Readline REQUIRED)

    if (READLINE_FOUND)
        add_library (cli SHARED cli.cpp)
        target_link_libraries (cli core readline ${Boost_LIBRARIES})
    else (READLINE_FOUND)
        message (FAIL_ERROR " readline not found, but cli build requested.")
    endif (READLINE_FOUND)

endif (WITH_CLI)

if (WITH_EXT_PYTHON_CLI)
    SET(CLI_PY_LIB unisched_cli)
    MESSAGE("  *============================================*")
    MESSAGE(" *             INTRUDER ALERT!!                 *")
    MESSAGE("*                                                *")
    MESSAGE("* Выбрана опция сборки python2-биндингов для CLI *")
    MESSAGE("*  Пока ничего не работает, не надо сюда лезть.  *")
    MESSAGE("*        (лучше просто пройди мимо)              *")
    MESSAGE(" *                                              *")
    MESSAGE("  *============================================*")
    CONFIGURE_FILE(cli_py_names.hpp.in ${PROJECT_SOURCE_DIR}/src/include/cli_py_names.hpp)
    LINK_LIBRARIES(boost_python)
    INCLUDE_DIRECTORIES("/usr/include/python2.7")
    LINK_DIRECTORIES("/usr/lib/python2.7")
    ADD_LIBRARY(${CLI_PY_LIB} SHARED cli_py.cpp)
    target_link_libraries(${CLI_PY_LIB} core dummyui)
endif(WITH_EXT_PYTHON_CLI)

if (WITH_LUAUI)
    add_library(luaui SHARED luaui.cpp)
    target_link_libraries(luaui core lua)
endif (WITH_LUAUI)

